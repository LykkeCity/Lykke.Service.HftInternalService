// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.HftInternalService.Client.AutorestClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for HftInternalServiceAPI.
    /// </summary>
    public static partial class HftInternalServiceAPIExtensions
    {
            /// <summary>
            /// Cash-in/out. Only for testing purpose. Should be removed.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='accountId'>
            /// </param>
            /// <param name='assetId'>
            /// </param>
            /// <param name='amount'>
            /// </param>
            public static string ApiAccountsByAccountIdCashInOutPost(this IHftInternalServiceAPI operations, string accountId, string assetId = default(string), double? amount = default(double?))
            {
                return operations.ApiAccountsByAccountIdCashInOutPostAsync(accountId, assetId, amount).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Cash-in/out. Only for testing purpose. Should be removed.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='accountId'>
            /// </param>
            /// <param name='assetId'>
            /// </param>
            /// <param name='amount'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> ApiAccountsByAccountIdCashInOutPostAsync(this IHftInternalServiceAPI operations, string accountId, string assetId = default(string), double? amount = default(double?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiAccountsByAccountIdCashInOutPostWithHttpMessagesAsync(accountId, assetId, amount, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object IsAlive(this IHftInternalServiceAPI operations)
            {
                return operations.IsAliveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> IsAliveAsync(this IHftInternalServiceAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsAliveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Generate api-key for a specified account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// Key creation settings.
            /// </param>
            public static ApiKeyDto ApiKeysPost(this IHftInternalServiceAPI operations, CreateAccountRequest request = default(CreateAccountRequest))
            {
                return operations.ApiKeysPostAsync(request).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Generate api-key for a specified account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// Key creation settings.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiKeyDto> ApiKeysPostAsync(this IHftInternalServiceAPI operations, CreateAccountRequest request = default(CreateAccountRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiKeysPostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get all api keys for a specified client.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientId'>
            /// </param>
            public static IList<ApiKeyDto> ApiKeysByClientIdGet(this IHftInternalServiceAPI operations, string clientId)
            {
                return operations.ApiKeysByClientIdGetAsync(clientId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all api keys for a specified client.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<ApiKeyDto>> ApiKeysByClientIdGetAsync(this IHftInternalServiceAPI operations, string clientId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiKeysByClientIdGetWithHttpMessagesAsync(clientId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete specified api-key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// </param>
            public static void ApiKeysByKeyDelete(this IHftInternalServiceAPI operations, string key)
            {
                operations.ApiKeysByKeyDeleteAsync(key).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete specified api-key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiKeysByKeyDeleteAsync(this IHftInternalServiceAPI operations, string key, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiKeysByKeyDeleteWithHttpMessagesAsync(key, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
