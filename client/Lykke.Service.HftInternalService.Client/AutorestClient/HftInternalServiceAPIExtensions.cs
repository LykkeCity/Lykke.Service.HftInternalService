// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.HftInternalService.Client.AutorestClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for HftInternalServiceAPI.
    /// </summary>
    public static partial class HftInternalServiceAPIExtensions
    {
            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object IsAlive(this IHftInternalServiceAPI operations)
            {
                return operations.IsAliveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> IsAliveAsync(this IHftInternalServiceAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsAliveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Generate api-key for a specified client.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// Key creation settings.
            /// </param>
            public static ApiKeyDto CreateKey(this IHftInternalServiceAPI operations, CreateApiKeyRequest request = default(CreateApiKeyRequest))
            {
                return operations.CreateKeyAsync(request).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Generate api-key for a specified client.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// Key creation settings.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiKeyDto> CreateKeyAsync(this IHftInternalServiceAPI operations, CreateApiKeyRequest request = default(CreateApiKeyRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateKeyWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get all api keys for a specified client.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientId'>
            /// </param>
            public static IList<ApiKeyDto> GetKeys(this IHftInternalServiceAPI operations, string clientId)
            {
                return operations.GetKeysAsync(clientId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all api keys for a specified client.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<ApiKeyDto>> GetKeysAsync(this IHftInternalServiceAPI operations, string clientId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetKeysWithHttpMessagesAsync(clientId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete specified api-key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// </param>
            public static void DeleteKey(this IHftInternalServiceAPI operations, string key)
            {
                operations.DeleteKeyAsync(key).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete specified api-key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='key'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteKeyAsync(this IHftInternalServiceAPI operations, string key, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteKeyWithHttpMessagesAsync(key, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
